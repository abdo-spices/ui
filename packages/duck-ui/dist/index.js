#!/usr/bin/env node
import {Command}from'commander';import w from'path';import {z}from'zod';import F from'fs-extra';import A from'fast-glob';import l from'kleur';import $t from'log-symbols';import {cyan,bgCyan,bgGreen,green,bgYellow,yellow,bgRed,red}from'kleur/colors';import {loadConfig,createMatchPath}from'tsconfig-paths';import ie from'chalk';import {cosmiconfig}from'cosmiconfig';import re from'prompts';import Ht from'ora';import {detect}from'@antfu/ni';import {execa}from'execa';import we from'axios';var L=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var h={name:"duck-ui",description:"This is the main file of the duck-ui CLI application written with TypeScript",version:"1.0.0"},j="https://duckui.vercel.app/registry";var U={name:"init",description:"init the project",options:{option_1:{flags:"-y, --yes",description:"skip confirmation prompt.",defaultValue:false},option_2:{flags:"-d, --defaults,",description:"use default configuration.",defaultValue:false},option_3:{flags:"-c, --cwd <cwd>",description:"the working directory. defaults to the current directory.",defaultValue:process.cwd()},option_4:{flags:"-s, --silent",description:"silent mode",defaultValue:false},option_5:{flags:"-f, --force",description:"will force and overwrite old configurations.",defaultValue:false},option_6:{flags:"-sd, --src-dir <src-dir>",description:"the source directory. defaults to the current directory.",defaultValue:process.cwd()}}};var V=z.object({yes:z.boolean().default(false),defaults:z.boolean().default(false),cwd:z.string().default(process.cwd()),slint:z.boolean().default(false),force:z.boolean().default(false),srcDir:z.string().default(process.cwd())});var p=["**/node_modules","**/.git","**/dist","**/.next","**/build","**/coverage","**/public"];var{error:Nt,warning:Ot,info:Dt,success:Lt}=$t,i={error:({with_icon:t=true,args:e})=>(console.log(l.red([t?Nt:"","ERROR:"].join(" ")),l.red(e.join(" "))),i),warn:({with_icon:t=true,args:e})=>(console.log(l.yellow([t?Ot:"","WARN:"].join(" ")),l.yellow(e.join(" "))),i),info:({with_icon:t=true,args:e})=>(console.log(l.green([t?Dt:"","INFO:"].join(" ")),l.green(e.join(" "))),i),success:({args:t,with_icon:e})=>(console.log(l.green([e?Lt:"","SUCCESS:"].join(" ")),l.green(t.join(" "))),i),break:()=>(console.log(""),i)};var c={error:red,bg_error:bgRed,warn:yellow,bg_warn:bgYellow,success:green,bg_success:bgGreen,info:cyan,bg_info:bgCyan};async function J(t){return !!A.globSync("tailwind.config.*",{cwd:t,deep:3,ignore:p}).length}async function d(t,e){return createMatchPath(e.absoluteBaseUrl,e.paths)(t,void 0,()=>true,[".ts",".tsx"])}async function G(t){let e=A.sync(["**/*.css","**/*.scss","**/*.sass"],{cwd:t,deep:3,ignore:p});if(!e.length)return null;for(let r of e){let n=await F.readFile(w.resolve(t,r),"utf8");if(n.includes("@tailwind base")||n.includes("@tailwind components")||n.includes("@tailwind utilities"))return r}return null}async function M(t){let e=loadConfig(t);if(e.resultType==="failed"||!e.paths)return null;for(let[r,n]of Object.entries(e.paths))if(n.includes("./src/*")||n.includes("./*"))return r.at(0);return null}function W(){if(!A.sync(["package.json"],{cwd:process.cwd(),deep:1,ignore:p}).length)return i.error({args:["package.json not found"]}),process.exit(1);let e=w.join(process.cwd(),"package.json");return JSON.parse(F.readFileSync(e,"utf8"))}var Y=cosmiconfig("duck-ui",{searchPlaces:["duck-ui.config.js","duck-ui.config.ts"]}),B=t=>`export default ${JSON.stringify(t,null,2)};
`;var k=z.object({$schema:z.string().optional(),style:z.string(),rsc:z.coerce.boolean().default(false),tsx:z.coerce.boolean().default(true),tailwind:z.object({config:z.string(),css:z.string(),baseColor:z.string(),cssVariables:z.boolean().default(true),prefix:z.string().default("").optional()}),aliases:z.object({components:z.string(),hooks:z.string().optional(),pages:z.string().optional(),utils:z.string(),lib:z.string().optional(),ui:z.string().optional()})}).strict(),K=k.extend({resolvedPaths:z.object({tailwindConfig:z.string(),tailwindCss:z.string(),utils:z.string(),components:z.string(),ui:z.string()})});var X={type:"NEXT_JS",detect:async t=>!!(await A.glob("**/*",{cwd:t,deep:3,ignore:p})).find(n=>n.includes("next.config"))};var T=(a=>(a.NEXT_JS="Next.js",a.VITE="Vite",a.CREATE_REACT_APP="Create React App",a.UNKNOWN="Unknown",a))(T||{}),q=[X];async function x(t){for(let e of q)if(await e.detect(t))return e.type;return "UNKNOWN"}function Z(t){return Object.values(t)}var Zt=Z(T);z.enum([...Zt]);function g(t,e){return Ht({color:"yellow",text:t,isSilent:e?.silent})}async function _(t){let e=await detect({programmatic:true,cwd:t});return e==="yarn@berry"?"yarn":e==="pnpm@6"?"pnpm":e||"npm"}async function H(t,e){let r=e??await _(t);return r==="pnpm"?"pnpm dlx":r==="bun"?"bunx":"npx"}var Q=[{type:"confirm",name:"typescript",message:`Would you like to install ${c.info("TypeScript")} (recommended)`,initial:false,active:"yes",inactive:"no"}],tt=["typescript"],et=`{
  "compilerOptions": {
    "target": "es6",                   // Target ECMAScript version
    "module": "commonjs",               // Specify module code generation
    "baseUrl": ".",                     // Base directory for non-relative module names
    "paths": {                          // Path aliases for cleaner imports
      "@components/*": ["src/components/*"],
      "@utils/*": ["src/utils/*"]
    },
    "jsx": "react-jsx",                 // Set JSX handling for React projects
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export
    "esModuleInterop": true,            // Import compatibility for CommonJS and ES modules
    "strict": true                      // Enable all strict type-checking options
  },
  "include": ["src"],                   // Include files in the src folder
  "exclude": ["node_modules", "dist"]   // Exclude folders from the config
}
`,ot=`{
  "compilerOptions": {
    "target": "es6", // Target ECMAScript version
    "module": "commonjs", // Module system used in Node.js
    "lib": ["dom", "es6", "dom.iterable", "scripthost"], // Standard library
    "jsx": "react-jsx", // JSX support for React
    "outDir": "./dist", // Output directory for compiled files
    "rootDir": "./src", // Root directory of source files
    "strict": true, // Enable strict type checking
    "moduleResolution": "node", // Module resolution strategy
    "esModuleInterop": true, // Allow default imports from CommonJS
    "skipLibCheck": true, // Skip type checking of declaration files
    "forceConsistentCasingInFileNames": true, // Enforce consistent file naming
    "resolveJsonModule": true, // Support importing JSON files
    "allowSyntheticDefaultImports": true, // Synthetic default imports for compatibility
    "baseUrl": ".", // Base directory for module resolution
    "paths": {
      // Define path aliases
      "@/*": ["./src/*"]
    }
  },
  "include": ["src"], // Include all source files in the src directory
  "exclude": ["node_modules", "dist", "tests"] // Exclude directories from compilation
}
`;async function nt(t,e){let r=g(c.info("Installing TypeScript...")).start(),n=await _(t),{failed:a}=await execa(n,[n!=="npm"?"install":"add",...tt,"-D"],{cwd:t,shell:true});if(a)return r.fail();await oe(t,e),i.break(),r.succeed();}async function oe(t,e){let r=g(c.info("Adding TypeScript config...")).start();await F.writeFile(w.join(t,`${e?"ts":"js"}config.json`),e?ot:et),i.break(),r.succeed();}async function u(t){return F.pathExists(w.resolve(t,"tsconfig.json"))}async function st(t){return !!A.sync(["duck-ui.*"],{cwd:t,deep:3,ignore:p}).length}var ct=z.object({typescript:z.boolean({message:"You have to pick one option",description:"Would you like to use TypeScript? (yes/no) -default: no"}).default(false)});async function pt(t){let e=await st(t);if(await u(t)||e)return;i.warn({args:[`${c.info("TypeScript")} is not installed. You need to install ${c.info("TypeScript")}...`]});let n=await re(Q),{typescript:a}=ct.parse(n);a&&await nt(t,a);}async function ae(t){try{let e=await Y.search(t);return e?k.parse(e.config):null}catch{i.error({args:[`Invalid configuration found in ${t}/components.json.`]}),process.exit(1);}}async function ce(t){let e=await ae(t);return e?await lt(t,e):null}async function lt(t,e){let r=loadConfig(t);return r.resultType==="failed"?i.error({args:[`Failed to leaod ${e.tsx?"tsconfig":"jsconfig"}.json. ${r.message??""}`.trim()]}):K.parse({...e,resolvedPaths:{tailwindConfig:w.resolve(t,e.tailwind.config),tailwindCss:w.resolve(t,e.tailwind.css),utils:await d(e.aliases.utils,r),components:await d(e.aliases.components,r),ui:e.aliases.ui?await d(e.aliases.ui,r):await d(e.aliases.components,r)}})}async function ft(t){let e=await ce(t);if(e)return e;let r=await x(t),n=await G(t),a=await M(t);if(!r||!n||!a)return i.error({args:[`Failed to get project config!, ${ie.bgRed.white("TailwindCss")} is required`]}),null;let m=await u(t),y={$schema:"https://duckui.vercel.app/schema.json",rsc:["NEXT_JS"].includes(r),tsx:m,style:"default",tailwind:{config:m?"tailwind.config.ts":"tailwind.config.js",baseColor:"zinc",css:n,cssVariables:true,prefix:""},aliases:{utils:`${a}/lib/utils`,components:`${a}/components`}},Et=y?.tsx?`export const config = ${JSON.stringify(y,null,2)};`:B(y);try{await F.writeFile(w.join(t,`duck-ui.config.${m?"ts":"js"}`),Et,"utf8");}catch(Pt){console.log(Pt),i.error({args:[`Failed to create duck-ui.config.${m?"ts":"js"}`]}),process.exit(1);}return lt(t,y)}z.string().min(1,"Path must be a non-empty string");z.string().refine(t=>/\/chat\/b\//.test(t),{message:"The URL must contain /chat/b/ in the pathname"});var gt=[{type:"confirm",name:"tailwind",message:`Would you like to install ${c.info("TailwindCSS")}`,initial:false,active:"yes",inactive:"no"}],ut=["tailwindcss","postcss","autoprefixer"],dt=["tailwindcss","init","-p"],C=`/** @type {import('tailwindcss').Config} */
    export default {
    content: [
      "./index.html",
      "./src/**/*.{js,ts,jsx,tsx}",
    ],
    theme: {
      extend: {},
    },
    plugins: [],
  };`;var yt=z.object({tailwind:z.boolean({message:"You have to pick one option",description:"Would you like to use TailwindCSS? (yes/no) -default: no"}).default(false)});async function wt(t){let e=g(c.info("Installing TailwindCSS...")).start(),r=await _(t),{failed:n}=await execa(r,[r!=="npm"?"install":"add",...ut],{cwd:t,shell:true});if(n)return e.fail();let a=await H(t,r),{failed:m}=await execa(a,[...dt],{cwd:t,shell:true});if(m)return e.fail();await fe(t),e.succeed();}async function fe(t){let e=await u(t),r=await x(t),n=g(c.info("Adding TailwindCSS config...")).start();e&&await execa(`mv ${w.join(t,"tailwind.config.js")} ${w.join(t,"tailwind.config.ts")}`,{shell:true,cwd:t}),await F.writeFile(w.join(t,`tailwind.config.${e?"ts":"js"}`),me(r)),await F.writeFile(w.join(t,ge()),ue()),i.break(),n.succeed();}var me=t=>t==="UNKNOWN"?C:C,ge=t=>"./style.css";function ue(t){return xt}var xt=`@tailwind base;
@tailwind components;
@tailwind utilities;
`;async function bt(t){if(await J(t))return;i.warn({args:[`${c.info("TailwindCss")} is not installed. You need to install ${c.info("TailwindCss")}...`]});let r=await re(gt),{tailwind:n}=yt.parse(r);n&&await wt(t);}var jt=z.enum(["components:style","components:lib","components:example","components:block","components:component","components:ui","components:hook","components:theme","components:page"]),kt=z.object({path:z.string(),content:z.string().optional(),type:jt,target:z.string().optional()}),_e=z.object({config:z.object({content:z.array(z.string()).optional(),theme:z.record(z.string(),z.any()).optional(),plugins:z.array(z.string()).optional()}).optional()}),ye=z.object({light:z.record(z.string(),z.string()).optional(),dark:z.record(z.string(),z.string()).optional()}),b=z.object({name:z.string(),type:jt,description:z.string().optional(),dependencies:z.array(z.string()).optional(),devDependencies:z.array(z.string()).optional(),registryDependencies:z.array(z.string()).optional(),files:z.array(kt).optional(),tailwind:_e.optional(),cssVars:ye.optional(),meta:z.record(z.string(),z.any()).optional(),docs:z.string().optional()});z.array(b.extend({files:z.array(z.union([z.string(),kt])).optional()}));z.array(z.object({name:z.string(),label:z.string()}));z.object({inlineColors:z.object({light:z.record(z.string(),z.string()),dark:z.record(z.string(),z.string())}),cssVars:z.object({light:z.record(z.string(),z.string()),dark:z.record(z.string(),z.string())}),inlineColorsTemplate:z.string(),cssVarsTemplate:z.string()});b.pick({dependencies:true,devDependencies:true,files:true,tailwind:true,cssVars:true,docs:true});var Tt={400:"Bad request",401:"Unauthorized",403:"Forbidden",404:"Not found",500:"Internal server error"};function I(t){try{return new URL(t),!0}catch{return  false}}function be(t){if(I(t)){let e=new URL(t);return e.pathname.match(/\/chat\/b\//)&&!e.pathname.endsWith("/json")&&(e.pathname=`${e.pathname}/json`),e.toString()}return `${j}/${t}`}async function St(t){try{return await Promise.all(t.map(async r=>{let n=be(r),a=await we.get(n);return a.status!==200&&je(a,n),a.data}))}catch{return i.error({args:[`
Failed to fetch from registry.`],with_icon:true}),[]}}function je(t,e){if(t.status===401)throw new Error(`You are not authorized to access the component at ${c.info(e)}.
If this is a remote registry, you may need to authenticate.`);if(t.status===404)throw new Error(`The component at ${c.info(e)} was not found.
It may not exist at the registry. Please make sure it is a valid component.`);if(t.status===403)throw new Error(`You do not have access to the component at ${c.info(e)}.
If this is a remote registry, you may need to authenticate or a token.`);let r=t.data,n=r&&typeof r=="object"&&"error"in r?r.error:t.statusText||Tt[t.status];throw new Error(`Failed to fetch from ${c.info(e)}.
${n}`)}async function Rt(t,e){try{let[r]=await St([I(t)?t:`styles/${e}/${t}.json`]);return console.log(Ct),b.parse(Ct)}catch(r){return i.error({args:["Failed to fetch from registry.",r]}),null}}var Ct={name:"button",dependencies:["@radix-ui/react-slot","command","tooltip"],registryDependencies:["dialog"],files:[{name:"button.tsx",path:"src/components/button.tsx",content:`import React from 'react'

import * as TooltipPrimitive from '@radix-ui/react-tooltip'
import { Slot } f`}],type:"components:ui"};async function It(t){let e=V.parse(t),r=w.resolve(e.cwd);i.info({args:["Checking for preflight..."]}),await pt(r),await bt(r);await ft(r);i.success({with_icon:true,args:[,"Done.!, preflight passed"]});let a=await Rt("button","default");console.log(a);}var{name:Se,description:Ce,options:Re}=U,{option_1:v,option_2:E,option_3:P,option_4:$,option_5:N,option_6:O}=Re;function vt(){let t=new Command(Se);return t.description(Ce).option(v.flags,v.description,v.defaultValue).option(E.flags,E.description,E.defaultValue).option(P.flags,P.description,P.defaultValue).option($.flags,$.description,$.defaultValue).option(N.flags,N.description,N.defaultValue).option(O.flags,O.description,O.defaultValue).action(It),t}function D(){let t=new Command,e=W();t.name(e?.name||h.name),t.description(e?.description||h.description),t.version(e?.version||h.version),t.addCommand(vt()),t.parse();}process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));L.main===module&&D();D();//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map