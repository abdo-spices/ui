{
  "name": "table-3",
  "type": "registry:example",
  "registryDependencies": [
    "table"
  ],
  "root_folder": "registry-examples-components/table",
  "files": [
    {
      "path": "registry-examples-components/table/table-3.tsx",
      "content": "import { TableCell, TableRow } from '@/registry/registry-ui-components/table'\nimport { columns } from './table-1'\nimport { tableData } from './table-2'\nimport {\n  DuckTable,\n  DuckTableBody,\n  DuckTableHeader,\n  DuckTableProvider,\n  DuckTableRowCheckbox,\n  useDuckTable,\n} from '@/registry/registry-ui-components/table/table-advanced'\nimport React from 'react'\nimport {\n  ArrowUpDown,\n  Calendar,\n  Ellipsis,\n  Laptop,\n  LogOut,\n  Moon,\n  Settings,\n  Sun,\n  User,\n} from 'lucide-react'\nimport {\n  DropdownMenuOptionsDataType,\n  DropdownMenuView,\n} from '@/registry/registry-ui-components/dropdown-menu/dropdown-menu-wrapper'\n\nexport default function TableDemo3() {\n  return (\n    <>\n      <DuckTableProvider table_rows={tableData} table_columns={columns}>\n        <DuckTable>\n          <DuckTableHeader />\n          <DuckTableBody>\n            <Rows />\n          </DuckTableBody>\n        </DuckTable>\n      </DuckTableProvider>\n    </>\n  )\n}\nexport function Rows() {\n  const { tableRows, tableColumns } = useDuckTable<typeof columns>()\n  return tableRows?.slice(0, 3).map((row, idx) => {\n    return (\n      <TableRow key={idx}>\n        {Object.values(row).map((item, idx) => {\n          const Component = () => (\n            <div className=\"flex items-center gap-2 [&>svg]:size-4 [&>svg]:stroke-[1.5] [&>svg]:text-muted-foreground\">\n              {item.icon}\n              <span className=\"text-ellipsis overflow-hidden duck-truncate\">\n                {item?.children}\n              </span>\n            </div>\n          )\n\n          return (\n            !Array.from(tableColumns.values())[idx]?.['aria-hidden'] && (\n              <TableCell key={idx}>\n                {idx === 0 ? (\n                  <div className=\"flex items-center gap-4\">\n                    <DuckTableRowCheckbox<typeof columns> tableRow={row} />\n                    <Component />\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-between gap-4\">\n                    <Component />\n                    {idx === Array.from(tableColumns.values()).length - 1 && (\n                      <DropdownMenuView\n                        trigger={{\n                          variant: 'ghost',\n                          size: 'sm',\n                          icon: <Ellipsis />,\n                          className: 'px-1 py-0 h-auto',\n                          // command: { label: '⌘K' },\n                        }}\n                        content={{\n                          label: { children: 'User Menu' },\n                          options: {\n                            itemType: 'label',\n                            optionsData: menuItems,\n                            group: [4, 1], // First 3 items in group 1, next 2 in group 2\n                          },\n                          className: 'min-w-[180px]',\n                        }}\n                        wrapper={{ modal: true }}\n                      />\n                    )}\n                  </div>\n                )}\n              </TableCell>\n            )\n          )\n        })}\n      </TableRow>\n    )\n  })\n}\nconst menuItems: DropdownMenuOptionsDataType[] = [\n  // Label type with icon and command\n  {\n    children: 'Profile',\n    icon: <User />,\n    command: { label: '⌘P', action: () => console.log('Profile opened') },\n    action: (e, { id }) => console.log(`Profile ${id} clicked`),\n  },\n  {\n    children: 'Theme',\n    icon: <Sun />,\n    nestedData: {\n      itemType: 'checkbox',\n      optionsData: [\n        {\n          children: 'Light',\n          value: 'light',\n          itemType: 'checkbox',\n          icon: <Sun />,\n        },\n        {\n          children: 'Dark',\n          value: 'dark',\n          itemType: 'checkbox',\n          icon: <Moon />,\n        },\n        {\n          children: 'System',\n          value: 'system',\n          itemType: 'checkbox',\n          icon: <Laptop />,\n        },\n      ],\n      group: [3],\n    },\n  },\n  // Radio type with nested options\n  {\n    children: 'Sort By',\n    icon: <ArrowUpDown />,\n    nestedData: {\n      itemType: 'radio',\n      optionsData: [\n        {\n          children: 'Date',\n          value: 'date',\n          itemType: 'radio',\n          icon: <Calendar />,\n        },\n        {\n          children: 'Name',\n          value: 'name',\n          itemType: 'radio',\n          icon: <User />,\n        },\n      ],\n      group: [2],\n    },\n  },\n  // Simple action item\n  {\n    children: 'Settings',\n    icon: <Settings />,\n    command: { label: '⌘S', action: () => console.log('Settings opened') },\n    action: (e, { id }) => console.log('Settings clicked'),\n  },\n  // Destructive action\n  {\n    children: 'Logout',\n    icon: <LogOut />,\n    className: 'text-red-600 hover:bg-red-50',\n    action: () => console.log('Logout clicked'),\n  },\n]\n",
      "type": "registry:example"
    }
  ]
}