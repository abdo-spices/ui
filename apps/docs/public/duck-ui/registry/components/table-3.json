{
  "name": "table-3",
  "type": "registry:example",
  "registryDependencies": [
    "table"
  ],
  "root_folder": "registry-examples-components/table",
  "files": [
    {
      "path": "registry-examples-components/table/table-3.tsx",
      "content": "import { TableCell, TableRow } from '@/registry/registry-ui-components/table'\nimport { columns } from './table-1'\nimport { tableData } from './table-2'\nimport {\n  DuckTable,\n  DuckTableBody,\n  DuckTableHeader,\n  DuckTableProvider,\n  DuckTableRowCheckbox,\n  useDuckTable,\n} from '@/registry/registry-ui-components/table/table-advanced'\nimport React from 'react'\nimport {\n  ArrowUpDown,\n  Calendar,\n  Ellipsis,\n  Laptop,\n  LogOut,\n  Moon,\n  Pen,\n  Settings,\n  Sun,\n  Trash2,\n  User,\n} from 'lucide-react'\nimport {\n  DropdownMenuOptionsDataType,\n  DropdownMenuView,\n} from '@/registry/registry-ui-components/dropdown-menu/dropdown-menu-wrapper'\nimport { toast } from 'sonner'\nimport { SheetWrapper } from '@/registry/registry-ui-components/sheet'\nimport { Button } from '@/registry/registry-ui-components/button'\n\nexport default function TableDemo3() {\n  return (\n    <>\n      <DuckTableProvider table_rows={tableData} table_columns={columns}>\n        <DuckTable>\n          <DuckTableHeader />\n          <DuckTableBody>\n            <Rows />\n          </DuckTableBody>\n        </DuckTable>\n      </DuckTableProvider>\n    </>\n  )\n}\nexport function Rows() {\n  const { tableRows, tableColumns } = useDuckTable<typeof columns>()\n  const [open, setOpen] = React.useState<boolean>(false)\n\n  return tableRows?.slice(0, 3).map((row, idx) => {\n    return (\n      <TableRow key={idx}>\n        {Object.values(row).map((item, idx) => {\n          const Component = () => (\n            <div className=\"flex items-center gap-2 [&>svg]:size-4 [&>svg]:stroke-[1.5] [&>svg]:text-muted-foreground\">\n              {item.icon}\n              <span className=\"text-ellipsis overflow-hidden duck-truncate\">\n                {item?.children}\n              </span>\n            </div>\n          )\n\n          return (\n            !Array.from(tableColumns.values())[idx]?.['aria-hidden'] && (\n              <TableCell key={idx}>\n                {idx === 0 ? (\n                  <div className=\"flex items-center gap-4\">\n                    <DuckTableRowCheckbox<typeof columns> tableRow={row} />\n                    <Component />\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-between gap-4\">\n                    <Component />\n                    {idx === Array.from(tableColumns.values()).length - 1 && (\n                      <DropdownMenuView\n                        trigger={{\n                          variant: 'ghost',\n                          size: 'sm',\n                          icon: <Ellipsis />,\n                          className: 'px-1 py-0 h-auto',\n                          // command: { label: 'âŒ˜K' },\n                        }}\n                        content={{\n                          label: { children: 'User Menu' },\n                          options: {\n                            itemType: 'label',\n                            optionsData: menuItems({ open, setOpen }),\n                            group: [1, 1], // First 3 items in group 1, next 2 in group 2\n                          },\n                          className: 'min-w-[180px]',\n                        }}\n                      // modal={false}\n                      // open={open}\n                      // onOpenChange={setOpen}\n                      />\n                    )}\n                  </div>\n                )}\n              </TableCell>\n            )\n          )\n        })}\n      </TableRow>\n    )\n  })\n}\nconst menuItems = ({\n  open,\n  setOpen,\n}: {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) =>\n  [\n    {\n      className: 'px-0',\n      children: (\n        <SheetWrapper\n          open={true}\n          onOpenChange={setOpen}\n          modal={false}\n          trigger={{\n            children: 'Settings',\n            icon: { children: Pen },\n            className: 'gap-2 w-full px-2',\n          }}\n          content={{\n            className:\n              '[&>div]:flex [&>div]:flex-col [&>div]:place-content-center [&>div]:w-fit [&>div]:place-self-center sm:max-w-[450px]',\n            children: 'asdfasdf',\n            _header: {\n              _title: { children: <>Goal</> },\n              _description: { children: <>Set your daily calorie goal</> },\n            },\n            _footer: {\n              className: 'flex w-full justify-between items-end',\n              _submit: (\n                <Button\n                  variant=\"default\"\n                  onClick={() => toast.success('Goal updated!')}\n                >\n                  Submit\n                </Button>\n              ),\n              _cancel: <Button variant=\"outline\">Cancel</Button>,\n            },\n          }}\n        />\n      ),\n    },\n    {\n      children: 'Delete',\n      icon: <Trash2 />,\n      className:\n        'bg-destructive/10 text-destructive hover:!bg-destructive hover:!text-white',\n    },\n  ] as DropdownMenuOptionsDataType[]\n",
      "type": "registry:example"
    }
  ]
}