[
  {
    "title": "button",
    "metadata": {
      "readingTime": 1,
      "wordCount": 278
    },
    "description": "A customizable button component for triggering actions in your application.",
    "excerpt": "Primary Icon\n\nicon (IconType, optional):\n\nSpecifies the primary icon displayed within the button.\n\n\n\nSecondary Icon\n\nsecondIcon (IconType, optional):\n\nAdds a secondary icon to appear alongside the primary icon.\n\n\n\nAnimation Icon\n\nanimationIcon ({ icon: [IconTy",
    "content": "<h4><strong>Primary Icon</strong></h4>\n<ul>\n<li><strong><code>icon</code></strong> (<a href=\"#icontype\"><code>IconType</code></a>, optional):\n<ul>\n<li>Specifies the primary icon displayed within the button.</li>\n</ul>\n</li>\n</ul>\n<h4><strong>Secondary Icon</strong></h4>\n<ul>\n<li><strong><code>secondIcon</code></strong> (<a href=\"#icontype\"><code>IconType</code></a>, optional):\n<ul>\n<li>Adds a secondary icon to appear alongside the primary icon.</li>\n</ul>\n</li>\n</ul>\n<h4><strong>Animation Icon</strong></h4>\n<ul>\n<li><strong><code>animationIcon</code></strong> (<code>{ icon: [IconType](#icontype), iconPlacement: 'left' | 'right' }</code>, optional):\n<ul>\n<li>Defines an animated icon that appears on hover, with <code>iconPlacement</code> specifying its position.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>Type Definitions</h2>\n<h3>IconType</h3>\n<p>Defines an icon component from the Lucide library.</p>\n<ul>\n<li><strong><code>children</code></strong> (LucideIcon): The icon component.</li>\n<li><strong>Additional SVG Props</strong>: Includes all <code>React.SVGProps</code> for SVG customization.</li>\n</ul>\n<hr>\n<h3>LabelType</h3>\n<p>Configures an optional label with tooltip support for additional context.</p>\n<ul>\n<li><strong><code>showCommand</code></strong> (<code>boolean</code>, optional): Show the command on the <code>Tooltip</code>.</li>\n<li><strong><code>showLabel</code></strong> (<code>boolean</code>, optional): Show the label on the <code>Tooltip</code>.</li>\n<li><strong><code>delayDuration</code></strong> (<code>number</code>, optional): The delay the <code>Tooltip</code> gonna take to me mounted.</li>\n<li><strong><code>...BadgeProps</code></strong> (<a href=\"/docs/components/badge#api-reference\"><code>BadgeType</code></a>,optional): The rest of <code>Badge</code> component props.</li>\n<li><strong><code>...TooltipProps</code></strong> (<a href=\"/docs/components/tooltip#api-reference\"><code>TooltipType</code></a>,optional): The rest\nof <code>Tooltip</code> component props.</li>\n<li><strong><code>...TooltipContent</code></strong>\n(<a href=\"/docs/components/tooltip#tooltipcontent\"><code>TooltipContentType</code></a>,optional): The rest of\n<code>TooltipContent</code> component props.</li>\n</ul>\n<hr>\n<h3>CommandType</h3>\n<p>Provides keyboard command handling and displays an associated shortcut or action label, it defines a command for keyboard shortcuts, with an action function, state management, and label.</p>\n<ul>\n<li><strong><code>label</code></strong> (<code>string</code>, optional): The label for the <code>Command</code>.</li>\n<li><strong><code>key</code></strong> (<code>string</code>, optional): The key for the <code>Command</code>.</li>\n<li><strong><code>show</code></strong> (<code>boolean</code>, optional): To show the <code>Command</code> body on the button.</li>\n<li><strong><code>action</code></strong> (<code>() => void</code>): The function that executes with the <code>Command</code>.</li>\n<li><strong><code>shortcut</code></strong> (<code>string[]</code>, optional): The keyboard keys associated with the <code>Command</code>.</li>\n<li><a href=\"/docs/components/badge#api-reference\"><strong><code>...BadgeProps</code></strong></a> (optional): The rest of <code>Badge</code> components props.</li>\n</ul>\n<h2>Changelog</h2>\n<h3>2024-12-19</h3>\n<ul>\n<li><strong>New Variants:</strong> Added new button variants, including muted, dashed, and warning styles.</li>\n<li><strong>Border Props:</strong> Introduced new button border properties to allow borders with hover effects.</li>\n<li><strong>Hook Update:</strong> Removed state from the <code>useDuckShortcut</code> hook, previously imported from <code>@ahmedayoub/shortcut</code>.</li>\n<li><strong>Documentation:</strong> Updated documentation to reflect the latest changes to the Button component.</li>\n</ul>",
    "body": "const{Fragment:n,jsx:e,jsxs:i}=arguments[0];function _createMdxContent(o){const r={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",span:\"span\",strong:\"strong\",ul:\"ul\",...o.components};return i(n,{children:[i(r.h4,{id:\"primary-icon\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#primary-icon\",children:e(r.span,{className:\"icon icon-link\"})}),e(r.strong,{children:\"Primary Icon\"})]}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"icon\",children:\"icon\"})}),\" (\",e(r.a,{href:\"#icontype\",children:e(r.code,{__rawString__:\"IconType\",children:\"IconType\"})}),\", optional):\",\"\\n\",i(r.ul,{children:[\"\\n\",e(r.li,{children:\"Specifies the primary icon displayed within the button.\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.h4,{id:\"secondary-icon\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#secondary-icon\",children:e(r.span,{className:\"icon icon-link\"})}),e(r.strong,{children:\"Secondary Icon\"})]}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"secondIcon\",children:\"secondIcon\"})}),\" (\",e(r.a,{href:\"#icontype\",children:e(r.code,{__rawString__:\"IconType\",children:\"IconType\"})}),\", optional):\",\"\\n\",i(r.ul,{children:[\"\\n\",e(r.li,{children:\"Adds a secondary icon to appear alongside the primary icon.\"}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",i(r.h4,{id:\"animation-icon\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#animation-icon\",children:e(r.span,{className:\"icon icon-link\"})}),e(r.strong,{children:\"Animation Icon\"})]}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"animationIcon\",children:\"animationIcon\"})}),\" (\",e(r.code,{__rawString__:\"{ icon: [IconType](#icontype), iconPlacement: 'left' | 'right' }\",children:\"{ icon: [IconType](#icontype), iconPlacement: 'left' | 'right' }\"}),\", optional):\",\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[\"Defines an animated icon that appears on hover, with \",e(r.code,{__rawString__:\"iconPlacement\",children:\"iconPlacement\"}),\" specifying its position.\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\"]}),\"\\n\",e(r.hr,{}),\"\\n\",i(r.h2,{id:\"type-definitions\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#type-definitions\",children:e(r.span,{className:\"icon icon-link\"})}),\"Type Definitions\"]}),\"\\n\",i(r.h3,{id:\"icontype\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#icontype\",children:e(r.span,{className:\"icon icon-link\"})}),\"IconType\"]}),\"\\n\",e(r.p,{children:\"Defines an icon component from the Lucide library.\"}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"children\",children:\"children\"})}),\" (LucideIcon): The icon component.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:\"Additional SVG Props\"}),\": Includes all \",e(r.code,{__rawString__:\"React.SVGProps\",children:\"React.SVGProps\"}),\" for SVG customization.\"]}),\"\\n\"]}),\"\\n\",e(r.hr,{}),\"\\n\",i(r.h3,{id:\"labeltype\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#labeltype\",children:e(r.span,{className:\"icon icon-link\"})}),\"LabelType\"]}),\"\\n\",e(r.p,{children:\"Configures an optional label with tooltip support for additional context.\"}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"showCommand\",children:\"showCommand\"})}),\" (\",e(r.code,{__rawString__:\"boolean\",children:\"boolean\"}),\", optional): Show the command on the \",e(r.code,{__rawString__:\"Tooltip\",children:\"Tooltip\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"showLabel\",children:\"showLabel\"})}),\" (\",e(r.code,{__rawString__:\"boolean\",children:\"boolean\"}),\", optional): Show the label on the \",e(r.code,{__rawString__:\"Tooltip\",children:\"Tooltip\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"delayDuration\",children:\"delayDuration\"})}),\" (\",e(r.code,{__rawString__:\"number\",children:\"number\"}),\", optional): The delay the \",e(r.code,{__rawString__:\"Tooltip\",children:\"Tooltip\"}),\" gonna take to me mounted.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"...BadgeProps\",children:\"...BadgeProps\"})}),\" (\",e(r.a,{href:\"/docs/components/badge#api-reference\",children:e(r.code,{__rawString__:\"BadgeType\",children:\"BadgeType\"})}),\",optional): The rest of \",e(r.code,{__rawString__:\"Badge\",children:\"Badge\"}),\" component props.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"...TooltipProps\",children:\"...TooltipProps\"})}),\" (\",e(r.a,{href:\"/docs/components/tooltip#api-reference\",children:e(r.code,{__rawString__:\"TooltipType\",children:\"TooltipType\"})}),\",optional): The rest\\nof \",e(r.code,{__rawString__:\"Tooltip\",children:\"Tooltip\"}),\" component props.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"...TooltipContent\",children:\"...TooltipContent\"})}),\"\\n(\",e(r.a,{href:\"/docs/components/tooltip#tooltipcontent\",children:e(r.code,{__rawString__:\"TooltipContentType\",children:\"TooltipContentType\"})}),\",optional): The rest of\\n\",e(r.code,{__rawString__:\"TooltipContent\",children:\"TooltipContent\"}),\" component props.\"]}),\"\\n\"]}),\"\\n\",e(r.hr,{}),\"\\n\",i(r.h3,{id:\"commandtype\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#commandtype\",children:e(r.span,{className:\"icon icon-link\"})}),\"CommandType\"]}),\"\\n\",e(r.p,{children:\"Provides keyboard command handling and displays an associated shortcut or action label, it defines a command for keyboard shortcuts, with an action function, state management, and label.\"}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"label\",children:\"label\"})}),\" (\",e(r.code,{__rawString__:\"string\",children:\"string\"}),\", optional): The label for the \",e(r.code,{__rawString__:\"Command\",children:\"Command\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"key\",children:\"key\"})}),\" (\",e(r.code,{__rawString__:\"string\",children:\"string\"}),\", optional): The key for the \",e(r.code,{__rawString__:\"Command\",children:\"Command\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"show\",children:\"show\"})}),\" (\",e(r.code,{__rawString__:\"boolean\",children:\"boolean\"}),\", optional): To show the \",e(r.code,{__rawString__:\"Command\",children:\"Command\"}),\" body on the button.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"action\",children:\"action\"})}),\" (\",e(r.code,{__rawString__:\"() => void\",children:\"() => void\"}),\"): The function that executes with the \",e(r.code,{__rawString__:\"Command\",children:\"Command\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:e(r.code,{__rawString__:\"shortcut\",children:\"shortcut\"})}),\" (\",e(r.code,{__rawString__:\"string[]\",children:\"string[]\"}),\", optional): The keyboard keys associated with the \",e(r.code,{__rawString__:\"Command\",children:\"Command\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.a,{href:\"/docs/components/badge#api-reference\",children:e(r.strong,{children:e(r.code,{__rawString__:\"...BadgeProps\",children:\"...BadgeProps\"})})}),\" (optional): The rest of \",e(r.code,{__rawString__:\"Badge\",children:\"Badge\"}),\" components props.\"]}),\"\\n\"]}),\"\\n\",i(r.h2,{id:\"changelog\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#changelog\",children:e(r.span,{className:\"icon icon-link\"})}),\"Changelog\"]}),\"\\n\",i(r.h3,{id:\"2024-12-19\",children:[e(r.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#2024-12-19\",children:e(r.span,{className:\"icon icon-link\"})}),\"2024-12-19\"]}),\"\\n\",i(r.ul,{children:[\"\\n\",i(r.li,{children:[e(r.strong,{children:\"New Variants:\"}),\" Added new button variants, including muted, dashed, and warning styles.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:\"Border Props:\"}),\" Introduced new button border properties to allow borders with hover effects.\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:\"Hook Update:\"}),\" Removed state from the \",e(r.code,{__rawString__:\"useDuckShortcut\",children:\"useDuckShortcut\"}),\" hook, previously imported from \",e(r.code,{__rawString__:\"@ahmedayoub/shortcut\",children:\"@ahmedayoub/shortcut\"}),\".\"]}),\"\\n\",i(r.li,{children:[e(r.strong,{children:\"Documentation:\"}),\" Updated documentation to reflect the latest changes to the Button component.\"]}),\"\\n\"]})]})}return{default:function(n={}){const{wrapper:i}=n.components||{};return i?e(i,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};",
    "toc": [
      {
        "title": "Type Definitions",
        "url": "#type-definitions",
        "items": [
          {
            "title": "IconType",
            "url": "#icontype",
            "items": []
          },
          {
            "title": "LabelType",
            "url": "#labeltype",
            "items": []
          },
          {
            "title": "CommandType",
            "url": "#commandtype",
            "items": []
          }
        ]
      },
      {
        "title": "Changelog",
        "url": "#changelog",
        "items": [
          {
            "title": "2024-12-19",
            "url": "#2024-12-19",
            "items": []
          }
        ]
      }
    ],
    "slug": "docs/components/button",
    "permalink": "components/button",
    "sourceFilePath": [],
    "sourceFileName": "button.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "components"
  }
]